---
- name: Set base_url without https
  set_fact:
    base_url_http: "{{ resourcespace.base_url | replace('https://', 'http://') }}"

- name: Pause a few seconds to ensure nginx is running
  pause:
    seconds: 5

- name: Execute cURL call to setup.php
  uri:
    url: "{{ base_url_http }}/pages/setup.php"
    method: POST
    timeout: 300
    follow_redirects: no
    body_format: form-urlencoded
    body:
      - [ defaultlanguage, en ]
      - [ mysql_server, "{{ resourcespace.mysql.hostname }}" ]
      - [ mysql_username, "{{ resourcespace.mysql.username }}" ]
      - [ mysql_password, "{{ resourcespace.mysql.password }}" ]
      - [ read_only_db_username, "{{ resourcespace.mysql.ro_username }}" ]
      - [ read_only_db_password, "{{ resourcespace.mysql.ro_password }}" ]
      - [ mysql_db, "{{ resourcespace.mysql.database }}" ]
      - [ mysql_bin_path, /usr/bin ]
      - [ applicationname, ResourceSpace ]
      - [ baseurl, "{{ base_url_http }}" ]
      - [ admin_fullname, "{{ resourcespace.admin.full_name }}" ]
      - [ admin_email, "{{ resourcespace.admin.email }}" ]
      - [ admin_username, "{{ resourcespace.admin.username }}" ]
      - [ admin_password, "{{ resourcespace.admin.password }}" ]
      - [ email_from, "{{ resourcespace.admin.from_email }}" ]
      - [ imagemagick_path, /usr/bin ]
      - [ ghostscript_path, /usr/bin ]
      - [ ffmpeg_path, /usr/bin ]
      - [ exiftool_path, /usr/bin ]
      - [ antiword_path, /usr/bin ]
      - [ pdftotext_path, /usr/bin ]
      - [ smtp_secure, '' ]
      - [ smtp_host, '' ]
      - [ smtp_port, '' ]
      - [ smtp_auth, on ]
      - [ smtp_username, '' ]
      - [ smtp_password, '' ]
      - [ google_vision_key, '' ]
      - [ submit, Begin installation ]
  register: setup_status_code
  failed_when: setup_status_code.status != 200 and setup_status_code.status != 301 and setup_status_code.status != 302

- name: Execute cURL call to setup.php
  uri:
    url: "{{ resourcespace.base_url }}/pages/setup.php"
    method: POST
    timeout: 300
    follow_redirects: no
    validate_certs: no
    body_format: form-urlencoded
    body:
      - [ defaultlanguage, en ]
      - [ mysql_server, "{{ resourcespace.mysql.hostname }}" ]
      - [ mysql_username, "{{ resourcespace.mysql.username }}" ]
      - [ mysql_password, "{{ resourcespace.mysql.password }}" ]
      - [ read_only_db_username, "{{ resourcespace.mysql.ro_username }}" ]
      - [ read_only_db_password, "{{ resourcespace.mysql.ro_password }}" ]
      - [ mysql_db, "{{ resourcespace.mysql.database }}" ]
      - [ mysql_bin_path, /usr/bin ]
      - [ applicationname, ResourceSpace ]
      - [ baseurl, "{{ resourcespace.base_url }}" ]
      - [ admin_fullname, "{{ resourcespace.admin.full_name }}" ]
      - [ admin_email, "{{ resourcespace.admin.email }}" ]
      - [ admin_username, "{{ resourcespace.admin.username }}" ]
      - [ admin_password, "{{ resourcespace.admin.password }}" ]
      - [ email_from, "{{ resourcespace.admin.from_email }}" ]
      - [ imagemagick_path, /usr/bin ]
      - [ ghostscript_path, /usr/bin ]
      - [ ffmpeg_path, /usr/bin ]
      - [ exiftool_path, /usr/bin ]
      - [ antiword_path, /usr/bin ]
      - [ pdftotext_path, /usr/bin ]
      - [ smtp_secure, '' ]
      - [ smtp_host, '' ]
      - [ smtp_port, '' ]
      - [ smtp_auth, on ]
      - [ smtp_username, '' ]
      - [ smtp_password, '' ]
      - [ google_vision_key, '' ]
      - [ submit, Begin installation ]
  when: setup_status_code.status == 301 or setup_status_code.status == 301

- name: Replace ResourceSpace base_url
  replace:
    path: "{{ resourcespace.repo_dir }}/include/config.php"
    regexp: "{{ base_url_http }}"
    replace: "{{ resourcespace.base_url }}"
  when: setup_status_code.status == 200

- name: Create repo folder
  file:
    path: "{{ resourcespace.rs_ptif.repo_dir }}"
    state: directory
    recurse: true
    owner: "{{ php.user }}"
    group: "{{ php.group }}"

- name: Checkout rs_ptif repo
  git:
    repo: "{{ resourcespace.rs_ptif.repo_url }}"
    dest: "{{ resourcespace.rs_ptif.repo_dir }}/repo/"
    force: true
    version: "{{ resourcespace.rs_ptif.branch }}"

- name: Chown repo
  file:
    path: "{{ resourcespace.rs_ptif.repo_dir }}/iiif_ptif/"
    state: directory
    recurse: true
    owner: "{{ php.user }}"
    group: "{{ php.group }}"

- name: Link rs_ptif repo
  file:
    src: "{{ resourcespace.rs_ptif.repo_dir }}/repo/iiif_ptif/"
    dest: "{{ resourcespace.repo_dir }}/plugins/iiif_ptif"
    state: link
    owner: "{{ php.user }}"
    group: "{{ php.group }}"

- name: Activate rs_ptif plugin
  community.mysql.mysql_query:
    login_db: "{{ resourcespace.mysql.database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: "{{ resourcespace.mysql.username }}"
    login_password: "{{ resourcespace.mysql.password }}"
    query: "INSERT INTO plugins(name, descrip, author, update_url, info_url, inst_version, config, config_json, config_url, enabled_groups, priority, disable_group_select, title, icon) VALUES('iiif_ptif', 'Allows files to be converted to Tiled Pyramidal TIFF (PTIF) on upload', 'Michiel Hebben', '', '', 1, NULL, NULL, '', NULL, 1, 0, '', '') ON DUPLICATE KEY UPDATE inst_version=VALUES(inst_version)"

- name: Check if rs_ptif_config.php is already appended to config.php
  shell: "fgrep -q '# RS_ptif configuration' {{ resourcespace.repo_dir }}/include/config.php"
  register: first_rs_run
  failed_when: first_rs_run.rc != 0 and first_rs_run.rc != 1

- name: Provide necessary ResourceSpace metadata fields
  mysql_db:
    name: "{{ resourcespace.mysql.database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: "{{ resourcespace.mysql.username }}"
    login_password: "{{ resourcespace.mysql.password }}"
    state: import
    target: "{{ imagehub.repo_dir }}/repo/resourcespace_metadata.sql"
  when: first_rs_run.rc == 1

- name: Put the config.php template
  template:
    src: config.php
    dest: /tmp/rs_ptif_config.php
  when: first_rs_run.rc == 1

- name: Append rs_ptif_config.php to config.php if not already done so
  shell: "cat /tmp/rs_ptif_config.php >> {{ resourcespace.repo_dir }}/include/config.php"
  when: first_rs_run.rc == 1

- name: Grab the api_scramble_key from config.php
  shell: sed -n "/api_scramble_key/s/.*'\([^']\+\)'.*/1\1/p" {{ resourcespace.repo_dir }}/include/config.php
  register: rs_api_scramble_key

- name: Generate API key
  set_fact:
    rs_api_key: "{{ rs_api_scramble_key.stdout | hash('sha256') }}"

- name: Copy imagehub.yaml for imagehub
  include_role:
    name: imagehub
    tasks_from: place_config.yml
